import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,a as e}from"./app-BTwBLxyO.js";const r={},t=e(`<h1 id="vue2-diff算法-md" tabindex="-1"><a class="header-anchor" href="#vue2-diff算法-md"><span>vue2 diff算法.md</span></a></h1><h2 id="什么是diff算法" tabindex="-1"><a class="header-anchor" href="#什么是diff算法"><span>什么是diff算法</span></a></h2><p>本质是比较两个JS对象（虚拟dom）的差异</p><div class="language-mermaid line-numbers-mode" data-ext="mermaid" data-title="mermaid"><pre class="language-mermaid"><code><span class="token keyword">graph</span> TD
A<span class="token text string">[数据改变]</span> <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">触发</span><span class="token arrow operator">--&gt;</span></span> B<span class="token text string">[setter]</span>
B <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">触发</span><span class="token arrow operator">--&gt;</span></span> C<span class="token text string">[Dep.notify]</span>
C <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">通知订阅者</span><span class="token arrow operator">--&gt;</span></span> D<span class="token text string">[&quot;patch(oldVnode,newVnode)&quot;]</span>
D <span class="token arrow operator">--&gt;</span> E<span class="token text string">{isSameVnode}</span>
E <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">是同类型的标签</span><span class="token arrow operator">--&gt;</span></span>F<span class="token text string">[patchVnode]</span>
E <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">不是同类型标签</span> <span class="token arrow operator">--&gt;</span></span>G<span class="token text string">[直接替换]</span>
F <span class="token arrow operator">--&gt;</span>H<span class="token text string">{oldVnode和newVnode是否相等}</span>
H <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span> <span class="token label property">相等</span><span class="token arrow operator">--&gt;</span></span>I<span class="token text string">[直接return]</span>
H <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">不相等</span><span class="token arrow operator">--&gt;</span></span>J<span class="token text string">[分情况]</span>
J <span class="token arrow operator">--&gt;</span>K1<span class="token text string">[oldVnode和newVnode都是文本节点]</span>
K1 <span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">执行</span><span class="token arrow operator">--&gt;</span></span>L1<span class="token text string">[用新的文本代替旧文本]</span>
J <span class="token arrow operator">--&gt;</span>K2<span class="token text string">[oldVnode没有子节点，newVnode有子节点]</span>
K2<span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">执行</span><span class="token arrow operator">--&gt;</span></span>L2<span class="token text string">[增加新的子节点]</span>
J <span class="token arrow operator">--&gt;</span>K3<span class="token text string">[oldVnode有子节点，newVnode没有子节点]</span>
K3<span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">执行</span><span class="token arrow operator">--&gt;</span></span>L3<span class="token text string">[删除旧的子节点]</span>
J <span class="token arrow operator">--&gt;</span>K4<span class="token text string">[oldVnode和newVnode都有子节点]</span>
K4<span class="token inter-arrow-label"><span class="token arrow-head arrow operator">--</span><span class="token label property">执行</span><span class="token arrow operator">--&gt;</span></span>L4<span class="token text string">[updateChildren]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>①依次比较，当比较成功后退出当前比较 ②渲染结果以newVnode为准 ③每次比较成功后start点和end点向中间靠拢 ④)当新旧节点中有一个start点跑到end点右侧时终止比较 ⑤如果都匹配不到，则旧虚拟DOM key值去比对新虚拟DOM的key值，如果key相同则复用，并移动到新虚拟DOM的位置</p>`,5),o=[t];function p(l,c){return s(),n("div",null,o)}const k=a(r,[["render",p],["__file","vue2 diff算法.html.vue"]]),w=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E5%85%AB%E8%82%A1%E6%96%87/vue2%20diff%E7%AE%97%E6%B3%95.html","title":"vue2 diff算法.md","lang":"zh-CN","frontmatter":{"description":"vue2 diff算法.md 什么是diff算法 本质是比较两个JS对象（虚拟dom）的差异 ①依次比较，当比较成功后退出当前比较 ②渲染结果以newVnode为准 ③每次比较成功后start点和end点向中间靠拢 ④)当新旧节点中有一个start点跑到end点右侧时终止比较 ⑤如果都匹配不到，则旧虚拟DOM key值去比对新虚拟DOM的key值，如果...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF%E5%85%AB%E8%82%A1%E6%96%87/vue2%20diff%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"ErWin的博客"}],["meta",{"property":"og:title","content":"vue2 diff算法.md"}],["meta",{"property":"og:description","content":"vue2 diff算法.md 什么是diff算法 本质是比较两个JS对象（虚拟dom）的差异 ①依次比较，当比较成功后退出当前比较 ②渲染结果以newVnode为准 ③每次比较成功后start点和end点向中间靠拢 ④)当新旧节点中有一个start点跑到end点右侧时终止比较 ⑤如果都匹配不到，则旧虚拟DOM key值去比对新虚拟DOM的key值，如果..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-10T07:11:45.000Z"}],["meta",{"property":"article:author","content":"Mr.ErWin"}],["meta",{"property":"article:modified_time","content":"2024-04-10T07:11:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue2 diff算法.md\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-10T07:11:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.ErWin\\",\\"url\\":\\"https://gitee.com/destiny12327\\"}]}"]]},"headers":[{"level":2,"title":"什么是diff算法","slug":"什么是diff算法","link":"#什么是diff算法","children":[]}],"git":{"createdTime":1712733105000,"updatedTime":1712733105000,"contributors":[{"name":"ma","email":"destiny0402@163.com","commits":1}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"前端八股文/vue2 diff算法.md","localizedDate":"2024年4月10日","excerpt":"\\n<h2>什么是diff算法</h2>\\n<p>本质是比较两个JS对象（虚拟dom）的差异</p>\\n<div class=\\"language-mermaid\\" data-ext=\\"mermaid\\" data-title=\\"mermaid\\"><pre class=\\"language-mermaid\\"><code><span class=\\"token keyword\\">graph</span> TD\\nA<span class=\\"token text string\\">[数据改变]</span> <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">触发</span><span class=\\"token arrow operator\\">--&gt;</span></span> B<span class=\\"token text string\\">[setter]</span>\\nB <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">触发</span><span class=\\"token arrow operator\\">--&gt;</span></span> C<span class=\\"token text string\\">[Dep.notify]</span>\\nC <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span> <span class=\\"token label property\\">通知订阅者</span><span class=\\"token arrow operator\\">--&gt;</span></span> D<span class=\\"token text string\\">[\\"patch(oldVnode,newVnode)\\"]</span>\\nD <span class=\\"token arrow operator\\">--&gt;</span> E<span class=\\"token text string\\">{isSameVnode}</span>\\nE <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">是同类型的标签</span><span class=\\"token arrow operator\\">--&gt;</span></span>F<span class=\\"token text string\\">[patchVnode]</span>\\nE <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span> <span class=\\"token label property\\">不是同类型标签</span> <span class=\\"token arrow operator\\">--&gt;</span></span>G<span class=\\"token text string\\">[直接替换]</span>\\nF <span class=\\"token arrow operator\\">--&gt;</span>H<span class=\\"token text string\\">{oldVnode和newVnode是否相等}</span>\\nH <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span> <span class=\\"token label property\\">相等</span><span class=\\"token arrow operator\\">--&gt;</span></span>I<span class=\\"token text string\\">[直接return]</span>\\nH <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">不相等</span><span class=\\"token arrow operator\\">--&gt;</span></span>J<span class=\\"token text string\\">[分情况]</span>\\nJ <span class=\\"token arrow operator\\">--&gt;</span>K1<span class=\\"token text string\\">[oldVnode和newVnode都是文本节点]</span>\\nK1 <span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">执行</span><span class=\\"token arrow operator\\">--&gt;</span></span>L1<span class=\\"token text string\\">[用新的文本代替旧文本]</span>\\nJ <span class=\\"token arrow operator\\">--&gt;</span>K2<span class=\\"token text string\\">[oldVnode没有子节点，newVnode有子节点]</span>\\nK2<span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">执行</span><span class=\\"token arrow operator\\">--&gt;</span></span>L2<span class=\\"token text string\\">[增加新的子节点]</span>\\nJ <span class=\\"token arrow operator\\">--&gt;</span>K3<span class=\\"token text string\\">[oldVnode有子节点，newVnode没有子节点]</span>\\nK3<span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">执行</span><span class=\\"token arrow operator\\">--&gt;</span></span>L3<span class=\\"token text string\\">[删除旧的子节点]</span>\\nJ <span class=\\"token arrow operator\\">--&gt;</span>K4<span class=\\"token text string\\">[oldVnode和newVnode都有子节点]</span>\\nK4<span class=\\"token inter-arrow-label\\"><span class=\\"token arrow-head arrow operator\\">--</span><span class=\\"token label property\\">执行</span><span class=\\"token arrow operator\\">--&gt;</span></span>L4<span class=\\"token text string\\">[updateChildren]</span>\\n\\n</code></pre></div>","autoDesc":true}');export{k as comp,w as data};
